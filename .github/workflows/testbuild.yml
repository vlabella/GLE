name: Test Build For Branch
on:
  workflow_dispatch:
env:
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
jobs:
  build:
    name: Build on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set reusable strings
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
    - name: Export GitHub Actions cache environment variables
      uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
    - name: Install dependencies
      run: |
          # make sure libraries are installed on windows
          git clone http://github.com/Microsoft/vcpkg
          ./vcpkg/bootstrap-vcpkg.sh
          vcpkg install
    - name: Configure CMake
      run: |
        cmake -S ${{github.workspace}}/src -B ${{ steps.strings.outputs.build-output-dir }} -D CMAKE_BUILD_TYPE=${{ matrix.build_type }}
    - name: Build
      run: |
        cmake --build ${{ steps.strings.outputs.build-output-dir }} --conifg=${{ matrix.build_type }}
    - name: Install
      run: |
        DESTDIR=destroot cmake --install build
