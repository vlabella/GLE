# single platform cmake build for windows
name: Windows Build
on:
  workflow_dispatch:
env:
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  BUILD_TYPE: Release
jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout GLE
      uses: actions/checkout@v4

    - name: Checkout GLE Library
      uses: actions/checkout@v4
      with:
        repository: "vlabella/gle-library"
        path: gle-library

    - name: Checkout GLE Manual
      uses: actions/checkout@v4
      with:
        repository: "vlabella/gle-manual"
        path: gle-manual

    - name: Acquire vcpkg
      uses: actions/checkout@v4
      with:
        repository: "Microsoft/vcpkg"
        path: vcpkg

    - name: Bootstrap vcpkg
      run: "${{ github.workspace }}\\vcpkg\\bootstrap-vcpkg.bat"
      shell: cmd

    - name: Enable GitHub Actions Cache backend
      uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Acquire Ghostscipt/PDL
      uses: actions/checkout@v4
      with:
        repository: "ArtifexSoftware/ghostpdl"
        path: ghostpdl
    - name: Install Chocolatey pkg
      uses: Tyler887/chocolatey-install@1.0
#    - name: Install MiKTeX
#        run: choco install miktex --no-progress
#          echo "C:\Program Files\MiKTeX\miktex\bin\x64" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8
#        run: initexmf --admin --verbose --set-config-value=[MPM]AutoInstall=1
#        run: miktex --admin --verbose packages update-package-database
#        run: miktex --admin --verbose packages update
#        run: miktex --verbose packages update
#        run: miktex --admin --verbose packages install cm-super
#        run: miktex --admin --verbose fndb refresh
#        run: initexmf --admin --verbose --update-fndb
#        run: initexmf --admin --verbose --mklinks --force
#        run: updmap --admin
#        shell: cmd
    - name: Configure CMake
      run: |
        cmake -S ${{github.workspace}}\src -B ${{github.workspace}}\build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DVCPKG_TARGET_TRIPLET=x64-windows-static-release -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake -DGHOSTPDL_ROOT=${{github.workspace}}/ghostpdl -DUSE_STATIC_RUNTIME=ON -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/stage -DGLE_EXAMPLES_LIBRARY_PATH="${{github.workspace}}/gle-library" -DGLE_USER_MANUAL_PATH="${{github.workspace}}/gle-manual"
    - name: Build
      run: |
        cmake --build ${{github.workspace}}\build --config ${{env.BUILD_TYPE}}
    - name: Install
      run: |
        cmake -DBUILD_TYPE=Release -P ${{github.workspace}}\build\cmake_install.cmake
    - name: Build Manual
      run: |
        cd ${{github.workspace}}\gle-manual & nmake -f Makefile.vc GLE_TOP=${{github.workspace}}\stage
    - name: Package
      run: |
        cd ${{github.workspace}}\build & cpack -G "NSIS;ZIP;7Z" -C ${{env.BUILD_TYPE}} -B "${{github.workspace}}\stage"