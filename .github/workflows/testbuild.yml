name: Test Build For Branch
on:
  workflow_dispatch:
jobs:
  build:
    name: Build on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Export GitHub Actions cache environment variables
      uses: actions/github-script@v7
      with:
        script: |
        core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
        core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
      env: 
        VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
    - name: Install dependencies
      run: |
        set -x
        touch configure.args

        case $RUNNER_OS in
          Windows)
            # make sure libraries are installed on windows
            git clone http://github.com/Microsoft/vcpkg
            ./vcpkg/bootstrap-vcpkg.sh
            vcpkg install
            ;;
          *)
            jobs=1
        esac

        echo "--parallel $jobs" >> build.args
    - name: Configure CMake
      run: |
        xargs -t < configure.args cmake -S src -B build -D CMAKE_BUILD_TYPE=Release
    - name: Build
      run: |
        xargs -t < build.args cmake --build build --verbose
    - name: Install
      run: |
        DESTDIR=destroot cmake --install build
