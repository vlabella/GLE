#
# -- Windows - build GLE executables
#     no manual or installer creation
#     runs on commit
#     binary installation folder saved
#
name: Build Windows
on:
  workflow_dispatch:
  #pull_request:
  #push:
  #  branches: [main]
env:
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
  BUILD_TYPE: Release
  TRIPLET: x64-windows-static-release
  VCPKG_ROOT: d:/vcpkg
#  VCPKG_BUILD_TREES_ROOT: d:\a\vb
#  VCPKG_PACAKGES_ROOT: d:\a\vp

jobs:
  build:
    name: Build Windows
    runs-on: windows-latest
    steps:

    - name: Enable GitHub Actions Cache backend
      uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Checkout GLE
      uses: actions/checkout@v4

    - name: Cache vcpkg artifacts
      uses: actions/cache@v3
      with:
        path: |
          ${{env.VCPKG_ROOT}}
 #         ${{env.VCPKG_BUILD_TREES_ROOT}}
 #         ${{env.VCPKG_PACAKGES_ROOT}}
        key: vcpkg-${{ runner.os }}-${{ hashFiles('src/vcpkg.json') }}
        restore-keys: |
          vcpkg-${{ runner.os }}-

    - name: Acquire vcpkg
      uses: actions/checkout@v4
      with:
        repository: "Microsoft/vcpkg"
        path: vcpkg

      #for debugging
    - name: List directory
      run: DIR /S "${{ github.workspace }}"
      shell: cmd

    - name: Move Vcpkg to VCPKG_ROOT
      shell: pwsh
      run: |
          Move-Item -Path "$env:GITHUB_WORKSPACE\vcpkg" -Destination "${{env.VCPKG_ROOT}}"


    - name: Bootstrap vcpkg
      run: "${{env.VCPKG_ROOT}}/bootstrap-vcpkg.bat"
      shell: cmd

    #- name: Copy custom triplet to vcpkg
    #  run: copy src\x64-windows-static-release-only.cmake vcpkg\triplets\
     # shell: cmd

    #- name: Install dependencies with custom buildtrees
    #  working-directory: ${{ github.workspace }}/src
    #  run: >
      #   ..\vcpkg\vcpkg install
      #   --x-buildtrees-root=${{env.VCPKG_BUILD_TREES_ROOT}}
      #   --x-install-root=${{env.VCPKG_ROOT}}
      #   --x-packages-root=${{env.VCPKG_PACAKGES_ROOT}}
      #   --triplet ${{env.TRIPLET}}
      # shell: cmd

    - name: Install ECM package using vcpkg
      run: "{{env.VCPKG_ROOT}}/vcpkg install ecm"
      shell: cmd

      #for debugging
    # - name: List directory
    #   run: DIR /S "${{ github.workspace }}/vcpkg"
    #   shell: cmd

    # - name: List directory
    #   run: DIR /S "${{env.VCPKG_ROOT}}"
    #   shell: cmd

      # header files needed for building of GLE
    - name: Acquire Ghostscipt/PDL
      uses: actions/checkout@v4
      with:
        repository: "ArtifexSoftware/ghostpdl"
        path: ghostpdl

    - name: Configure CMake
      working-directory: ${{ github.workspace }}
      env:
        VCPKG_INSTALLED_DIR: ${{env.VCPKG_ROOT}}
      run: >
        cmake -B build -S src
        -DCMAKE_TOOLCHAIN_FILE={{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -DVCPKG_TARGET_TRIPLET=${{env.TRIPLET}}
        -DGHOSTPDL_ROOT=${{github.workspace}}/ghostpdl
        -DMSVC_USE_STATIC_RUNTIME=ON
        -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/stage
        -DGLE_EXAMPLES_LIBRARY_PATH="${{github.workspace}}/gle-library"
        -DGLE_USER_MANUAL_PATH="${{github.workspace}}/gle-manual"
        -DECM_DIR="${{github.workspace}}/vcpkg/installed/x64-windows/share/ECM"
      shell: cmd

    # for debugging
    #- name: List directory
    #  run: DIR /S "${{ github.workspace }}/build/vcpkg_installed/x64-windows-static-release/include/poppler"
    #  shell: cmd


    - name: Build
      working-directory: ${{ github.workspace }}
      run: |
        cmake --build build --config ${{env.BUILD_TYPE}}
      shell: cmd

    - name: Install
      working-directory: ${{ github.workspace }}
      run: |
        cmake -DBUILD_TYPE=${{env.BUILD_TYPE}} -P build\cmake_install.cmake
      shell: cmd

    - name: Upload Artifacts - zip file of installation folder
      uses: actions/upload-artifact@v4.4.3
      with:
        name: Windows Binaries
        path: ${{github.workspace}}/stage
        if-no-files-found: warn
        retention-days: 0
        compression-level: 0

